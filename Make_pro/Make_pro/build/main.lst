ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxd9j2t.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SystemClock_Config,"ax",%progbits
  20              		.align	2
  21              		.global	SystemClock_Config
  22              		.thumb
  23              		.thumb_func
  25              	SystemClock_Config:
  26              	.LFB66:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** //#include "usart.h"
  24:Src/main.c    **** #include "Control_usart.h"
  25:Src/main.c    **** #include "gpio.h"
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* USER CODE END Includes */
  31:Src/main.c    **** 
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxd9j2t.s 			page 2


  32:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PD */
  39:Src/main.c    **** /* USER CODE END PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  53:Src/main.c    **** void SystemClock_Config(void);
  54:Src/main.c    **** /* USER CODE BEGIN PFP */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* USER CODE END PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  59:Src/main.c    **** /* USER CODE BEGIN 0 */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END 0 */
  62:Src/main.c    **** 
  63:Src/main.c    **** /**
  64:Src/main.c    ****   * @brief  The application entry point.
  65:Src/main.c    ****   * @retval int
  66:Src/main.c    ****   */
  67:Src/main.c    **** int main(void)
  68:Src/main.c    **** {
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
  70:Src/main.c    **** 
  71:Src/main.c    ****   /* USER CODE END 1 */
  72:Src/main.c    **** 
  73:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  76:Src/main.c    ****   HAL_Init();
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* USER CODE BEGIN Init */
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* USER CODE END Init */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* Configure the system clock */
  83:Src/main.c    ****   SystemClock_Config();
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE END SysInit */
  88:Src/main.c    **** 
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxd9j2t.s 			page 3


  89:Src/main.c    ****   /* Initialize all configured peripherals */
  90:Src/main.c    ****   MX_GPIO_Init();
  91:Src/main.c    ****   MX_ALL_OF_UART_Init();
  92:Src/main.c    ****   /* USER CODE BEGIN 2 */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE END 2 */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* Infinite loop */
  97:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  98:Src/main.c    ****   while (1)
  99:Src/main.c    ****   {
 100:Src/main.c    ****     /* USER CODE END WHILE */
 101:Src/main.c    ****  
 102:Src/main.c    ****     /* USER CODE BEGIN 3 */
 103:Src/main.c    ****   }
 104:Src/main.c    ****   /* USER CODE END 3 */
 105:Src/main.c    **** }
 106:Src/main.c    **** 
 107:Src/main.c    **** /**
 108:Src/main.c    ****   * @brief System Clock Configuration
 109:Src/main.c    ****   * @retval None
 110:Src/main.c    ****   */
 111:Src/main.c    **** void SystemClock_Config(void)
 112:Src/main.c    **** {
  28              		.loc 1 112 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 64
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 91B0     		sub	sp, sp, #68
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 80
 113:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  41              		.loc 1 113 0
  42 0004 2822     		movs	r2, #40
  43 0006 0021     		movs	r1, #0
  44 0008 06A8     		add	r0, sp, #24
  45 000a FFF7FEFF 		bl	memset
  46              	.LVL0:
 114:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  47              		.loc 1 114 0
  48 000e 0024     		movs	r4, #0
  49 0010 0194     		str	r4, [sp, #4]
  50 0012 0294     		str	r4, [sp, #8]
  51 0014 0394     		str	r4, [sp, #12]
  52 0016 0494     		str	r4, [sp, #16]
  53 0018 0594     		str	r4, [sp, #20]
 115:Src/main.c    **** 
 116:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 117:Src/main.c    ****   */
 118:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  54              		.loc 1 118 0
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxd9j2t.s 			page 4


  55 001a 0122     		movs	r2, #1
  56 001c 0692     		str	r2, [sp, #24]
 119:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  57              		.loc 1 119 0
  58 001e 4FF48033 		mov	r3, #65536
  59 0022 0793     		str	r3, [sp, #28]
 120:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 121:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  60              		.loc 1 121 0
  61 0024 0A92     		str	r2, [sp, #40]
 122:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  62              		.loc 1 122 0
  63 0026 0225     		movs	r5, #2
  64 0028 0D95     		str	r5, [sp, #52]
 123:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  65              		.loc 1 123 0
  66 002a 0E93     		str	r3, [sp, #56]
 124:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  67              		.loc 1 124 0
  68 002c 4FF4E013 		mov	r3, #1835008
  69 0030 0F93     		str	r3, [sp, #60]
 125:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  70              		.loc 1 125 0
  71 0032 06A8     		add	r0, sp, #24
  72 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
  73              	.LVL1:
 126:Src/main.c    ****   {
 127:Src/main.c    ****     Error_Handler();
 128:Src/main.c    ****   }
 129:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 130:Src/main.c    ****   */
 131:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
  74              		.loc 1 131 0
  75 0038 0F23     		movs	r3, #15
  76 003a 0193     		str	r3, [sp, #4]
 132:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 133:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
  77              		.loc 1 133 0
  78 003c 0295     		str	r5, [sp, #8]
 134:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  79              		.loc 1 134 0
  80 003e 0394     		str	r4, [sp, #12]
 135:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  81              		.loc 1 135 0
  82 0040 4FF48063 		mov	r3, #1024
  83 0044 0493     		str	r3, [sp, #16]
 136:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  84              		.loc 1 136 0
  85 0046 0594     		str	r4, [sp, #20]
 137:Src/main.c    **** 
 138:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  86              		.loc 1 138 0
  87 0048 2946     		mov	r1, r5
  88 004a 01A8     		add	r0, sp, #4
  89 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
  90              	.LVL2:
 139:Src/main.c    ****   {
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxd9j2t.s 			page 5


 140:Src/main.c    ****     Error_Handler();
 141:Src/main.c    ****   }
 142:Src/main.c    **** }
  91              		.loc 1 142 0
  92 0050 11B0     		add	sp, sp, #68
  93              	.LCFI2:
  94              		.cfi_def_cfa_offset 12
  95              		@ sp needed
  96 0052 30BD     		pop	{r4, r5, pc}
  97              		.cfi_endproc
  98              	.LFE66:
 100              		.section	.text.main,"ax",%progbits
 101              		.align	2
 102              		.global	main
 103              		.thumb
 104              		.thumb_func
 106              	main:
 107              	.LFB65:
  68:Src/main.c    ****   /* USER CODE BEGIN 1 */
 108              		.loc 1 68 0
 109              		.cfi_startproc
 110              		@ Volatile: function does not return.
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113 0000 08B5     		push	{r3, lr}
 114              	.LCFI3:
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 3, -8
 117              		.cfi_offset 14, -4
  76:Src/main.c    **** 
 118              		.loc 1 76 0
 119 0002 FFF7FEFF 		bl	HAL_Init
 120              	.LVL3:
  83:Src/main.c    **** 
 121              		.loc 1 83 0
 122 0006 FFF7FEFF 		bl	SystemClock_Config
 123              	.LVL4:
  90:Src/main.c    ****   MX_ALL_OF_UART_Init();
 124              		.loc 1 90 0
 125 000a FFF7FEFF 		bl	MX_GPIO_Init
 126              	.LVL5:
  91:Src/main.c    ****   /* USER CODE BEGIN 2 */
 127              		.loc 1 91 0
 128 000e FFF7FEFF 		bl	MX_ALL_OF_UART_Init
 129              	.LVL6:
 130              	.L4:
 131 0012 FEE7     		b	.L4
 132              		.cfi_endproc
 133              	.LFE65:
 135              		.section	.text.Error_Handler,"ax",%progbits
 136              		.align	2
 137              		.global	Error_Handler
 138              		.thumb
 139              		.thumb_func
 141              	Error_Handler:
 142              	.LFB67:
 143:Src/main.c    **** 
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxd9j2t.s 			page 6


 144:Src/main.c    **** /* USER CODE BEGIN 4 */
 145:Src/main.c    **** 
 146:Src/main.c    **** /* USER CODE END 4 */
 147:Src/main.c    **** 
 148:Src/main.c    **** /**
 149:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 150:Src/main.c    ****   * @retval None
 151:Src/main.c    ****   */
 152:Src/main.c    **** void Error_Handler(void)
 153:Src/main.c    **** {
 143              		.loc 1 153 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148 0000 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE67:
 152 0002 00BF     		.text
 153              	.Letext0:
 154              		.file 2 "/Users/leixiaoxiang/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 155              		.file 3 "/Users/leixiaoxiang/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 156              		.file 4 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 157              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 158              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 159              		.file 7 "Inc/gpio.h"
 160              		.file 8 "Inc/Control_usart.h"
 161              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 162              		.file 10 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxd9j2t.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxd9j2t.s:20     .text.SystemClock_Config:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxd9j2t.s:25     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxd9j2t.s:101    .text.main:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxd9j2t.s:106    .text.main:0000000000000000 main
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxd9j2t.s:136    .text.Error_Handler:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccxd9j2t.s:141    .text.Error_Handler:0000000000000000 Error_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_ALL_OF_UART_Init
