ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Control_usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_SINGLE_OF_UART_Init,"ax",%progbits
  20              		.align	2
  21              		.global	MX_SINGLE_OF_UART_Init
  22              		.thumb
  23              		.thumb_func
  25              	MX_SINGLE_OF_UART_Init:
  26              	.LFB67:
  27              		.file 1 "Src/Control_usart.c"
   1:Src/Control_usart.c **** /**
   2:Src/Control_usart.c ****   ******************************************************************************
   3:Src/Control_usart.c ****   * File Name          : Control_usart.c
   4:Src/Control_usart.c ****   * Description        : This file provides code for the control
   5:Src/Control_usart.c ****   *                      of the USART instances.
   6:Src/Control_usart.c ****   ******************************************************************************
   7:Src/Control_usart.c ****   * @attention
   8:Src/Control_usart.c ****   *
   9:Src/Control_usart.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/Control_usart.c ****   * All rights reserved.</center></h2>
  11:Src/Control_usart.c ****   *
  12:Src/Control_usart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/Control_usart.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/Control_usart.c ****   * License. You may obtain a copy of the License at:
  15:Src/Control_usart.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/Control_usart.c ****   *
  17:Src/Control_usart.c ****   ******************************************************************************
  18:Src/Control_usart.c ****   */
  19:Src/Control_usart.c **** 
  20:Src/Control_usart.c **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Src/Control_usart.c **** #ifndef UART_GLOBALS_VARIABLE_DEFINED
  22:Src/Control_usart.c **** #define UART_GLOBALS_VARIABLE_DEFINED
  23:Src/Control_usart.c **** #ifdef __cplusplus
  24:Src/Control_usart.c ****  extern "C" {
  25:Src/Control_usart.c **** #endif
  26:Src/Control_usart.c **** 
  27:Src/Control_usart.c **** /* Includes ------------------------------------------------------------------*/
  28:Src/Control_usart.c **** #include "Control_usart.h"
  29:Src/Control_usart.c **** #include "stdio.h"
  30:Src/Control_usart.c **** #include "string.h"
  31:Src/Control_usart.c **** 
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 2


  32:Src/Control_usart.c **** 
  33:Src/Control_usart.c **** /* USER CODE BEGIN Preivate defines */
  34:Src/Control_usart.c **** #ifdef __GNUC__
  35:Src/Control_usart.c **** #define PUTCHAR_PROTOTYPE int __io_putchar(int ch)
  36:Src/Control_usart.c **** #else
  37:Src/Control_usart.c **** #define PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)
  38:Src/Control_usart.c **** #endif
  39:Src/Control_usart.c **** 
  40:Src/Control_usart.c **** #if (USE_HAL_UART4 == 1U)
  41:Src/Control_usart.c ****   #define UART4_RxXferSize    ((uint16_t)1000)
  42:Src/Control_usart.c ****   uint8_t  UART4_RxBuff[UART4_RxXferSize];
  43:Src/Control_usart.c **** #endif
  44:Src/Control_usart.c **** 
  45:Src/Control_usart.c **** #if (USE_HAL_UART5 == 1U)
  46:Src/Control_usart.c ****   #define UART5_RxXferSize    ((uint16_t)1000)
  47:Src/Control_usart.c ****   uint8_t  UART5_RxBuff[UART5_RxXferSize];
  48:Src/Control_usart.c **** #endif
  49:Src/Control_usart.c **** 
  50:Src/Control_usart.c **** #if (USE_HAL_UART1 == 1U)
  51:Src/Control_usart.c ****   #define UART1_RxXferSize    ((uint16_t)1000)
  52:Src/Control_usart.c ****   uint8_t  UART1_RxBuff[UART1_RxXferSize];
  53:Src/Control_usart.c **** #endif
  54:Src/Control_usart.c **** 
  55:Src/Control_usart.c **** #if (USE_HAL_UART2 == 1U)
  56:Src/Control_usart.c ****   #define UART2_RxXferSize    ((uint16_t)1000)
  57:Src/Control_usart.c ****   uint8_t  UART2_RxBuff[UART2_RxXferSize];
  58:Src/Control_usart.c **** #endif
  59:Src/Control_usart.c **** 
  60:Src/Control_usart.c **** #if (USE_HAL_UART3 == 1U)
  61:Src/Control_usart.c ****   #define UART3_RxXferSize    ((uint16_t)1000)
  62:Src/Control_usart.c ****   uint8_t  UART3_RxBuff[UART3_RxXferSize];
  63:Src/Control_usart.c **** #endif
  64:Src/Control_usart.c **** /* USER CODE END Preivate defines */
  65:Src/Control_usart.c **** 
  66:Src/Control_usart.c **** 
  67:Src/Control_usart.c **** /* USER CODE BEGIN 0 */
  68:Src/Control_usart.c **** static UART_HandleTypeDef* UART_Array[] = {
  69:Src/Control_usart.c ****         #if (USE_HAL_UART4 == 1U)
  70:Src/Control_usart.c ****             &huart4,
  71:Src/Control_usart.c ****         #endif
  72:Src/Control_usart.c **** 
  73:Src/Control_usart.c ****         #if (USE_HAL_UART5 == 1U)
  74:Src/Control_usart.c ****             &huart5,
  75:Src/Control_usart.c ****         #endif
  76:Src/Control_usart.c **** 
  77:Src/Control_usart.c ****         #if (USE_HAL_UART1 == 1U)
  78:Src/Control_usart.c ****             &huart1,
  79:Src/Control_usart.c ****         #endif
  80:Src/Control_usart.c **** 
  81:Src/Control_usart.c ****         #if (USE_HAL_UART2 == 1U)
  82:Src/Control_usart.c ****             &huart2,
  83:Src/Control_usart.c ****         #endif
  84:Src/Control_usart.c **** 
  85:Src/Control_usart.c ****         #if (USE_HAL_UART3 == 1U)
  86:Src/Control_usart.c ****             &huart3,
  87:Src/Control_usart.c ****         #endif
  88:Src/Control_usart.c **** 
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 3


  89:Src/Control_usart.c ****         NULL
  90:Src/Control_usart.c **** };
  91:Src/Control_usart.c **** /* USER CODE END 0 */
  92:Src/Control_usart.c **** 
  93:Src/Control_usart.c **** 
  94:Src/Control_usart.c **** /* USER CODE END 1 */
  95:Src/Control_usart.c **** void MX_ALL_OF_UART_Init(void)
  96:Src/Control_usart.c **** {
  97:Src/Control_usart.c ****     UART_HandleTypeDef** pUART_Array = UART_Array;
  98:Src/Control_usart.c **** 
  99:Src/Control_usart.c ****     for (; *pUART_Array != NULL; pUART_Array++)
 100:Src/Control_usart.c ****     {
 101:Src/Control_usart.c ****         MX_SINGLE_OF_UART_Init(*pUART_Array);
 102:Src/Control_usart.c ****     }  
 103:Src/Control_usart.c **** }
 104:Src/Control_usart.c **** 
 105:Src/Control_usart.c **** void MX_SINGLE_OF_UART_Init(UART_HandleTypeDef* huart)
 106:Src/Control_usart.c **** {
  28              		.loc 1 106 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0446     		mov	r4, r0
 107:Src/Control_usart.c ****     huart->Init.HwFlowCtl = UART_HWCONTROL_NONE;
  39              		.loc 1 107 0
  40 0004 0023     		movs	r3, #0
  41 0006 8361     		str	r3, [r0, #24]
 108:Src/Control_usart.c ****     huart->Init.OverSampling = UART_OVERSAMPLING_16;
  42              		.loc 1 108 0
  43 0008 C361     		str	r3, [r0, #28]
 109:Src/Control_usart.c ****     #if (USE_HAL_UART4 == 1U)
 110:Src/Control_usart.c ****         if(UART4 == huart->Instance)
 111:Src/Control_usart.c ****         {
 112:Src/Control_usart.c ****             huart->pRxBuffPtr   = UART4_RxBuff;
 113:Src/Control_usart.c ****             huart->RxXferSize   = UART4_RxXferSize;
 114:Src/Control_usart.c ****         }
 115:Src/Control_usart.c ****     #elif (USE_HAL_UART5 == 1U)
 116:Src/Control_usart.c ****         if(UART5 == huart->Instance)
 117:Src/Control_usart.c ****         {
 118:Src/Control_usart.c ****             huart->pRxBuffPtr   = UART5_RxBuff;
 119:Src/Control_usart.c ****             huart->RxXferSize   = UART5_RxXferSize;
 120:Src/Control_usart.c ****         }
 121:Src/Control_usart.c ****     #elif (USE_HAL_UART1 == 1U)
 122:Src/Control_usart.c ****         if(USART1 == huart->Instance)
  44              		.loc 1 122 0
  45 000a 0268     		ldr	r2, [r0]
  46 000c 0C4B     		ldr	r3, .L6
  47 000e 9A42     		cmp	r2, r3
  48 0010 04D1     		bne	.L2
 123:Src/Control_usart.c ****         {
 124:Src/Control_usart.c ****             huart->pRxBuffPtr   = UART1_RxBuff;
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 4


  49              		.loc 1 124 0
  50 0012 0C4B     		ldr	r3, .L6+4
  51 0014 8362     		str	r3, [r0, #40]
 125:Src/Control_usart.c ****             huart->RxXferSize   = UART1_RxXferSize;
  52              		.loc 1 125 0
  53 0016 4FF47A73 		mov	r3, #1000
  54 001a 8385     		strh	r3, [r0, #44]	@ movhi
  55              	.L2:
 126:Src/Control_usart.c ****         }
 127:Src/Control_usart.c ****     #elif (USE_HAL_UART2 == 1U)
 128:Src/Control_usart.c ****         if(UART2 == huart->Instance)
 129:Src/Control_usart.c ****         {
 130:Src/Control_usart.c ****             huart->pRxBuffPtr   = UART2_RxBuff;
 131:Src/Control_usart.c ****             huart->RxXferSize   = UART2_RxXferSize;
 132:Src/Control_usart.c ****         }
 133:Src/Control_usart.c ****     #elif (USE_HAL_UART3 == 1U)
 134:Src/Control_usart.c ****         if(UART3 == huart->Instance)
 135:Src/Control_usart.c ****         {
 136:Src/Control_usart.c ****             huart->pRxBuffPtr   = UART3_RxBuff;
 137:Src/Control_usart.c ****             huart->RxXferSize   = UART3_RxXferSize;
 138:Src/Control_usart.c ****         }
 139:Src/Control_usart.c ****     #endif
 140:Src/Control_usart.c **** 
 141:Src/Control_usart.c ****     if(HAL_UART_Init(huart) != HAL_OK)
  56              		.loc 1 141 0
  57 001c 2046     		mov	r0, r4
  58              	.LVL1:
  59 001e FFF7FEFF 		bl	HAL_UART_Init
  60              	.LVL2:
  61 0022 10B1     		cbz	r0, .L3
 142:Src/Control_usart.c ****     {
 143:Src/Control_usart.c ****         Error_Handler();
  62              		.loc 1 143 0
  63 0024 FFF7FEFF 		bl	Error_Handler
  64              	.LVL3:
  65 0028 10BD     		pop	{r4, pc}
  66              	.LVL4:
  67              	.L3:
 144:Src/Control_usart.c ****     }
 145:Src/Control_usart.c ****     else
 146:Src/Control_usart.c ****     {
 147:Src/Control_usart.c ****         __HAL_UART_ENABLE_IT(huart, UART_IT_IDLE);
  68              		.loc 1 147 0
  69 002a 2268     		ldr	r2, [r4]
  70 002c D368     		ldr	r3, [r2, #12]
  71 002e 43F01003 		orr	r3, r3, #16
  72 0032 D360     		str	r3, [r2, #12]
 148:Src/Control_usart.c ****         HAL_UART_Receive_IT(huart, huart->pRxBuffPtr, huart->RxXferSize);
  73              		.loc 1 148 0
  74 0034 A28D     		ldrh	r2, [r4, #44]
  75 0036 A16A     		ldr	r1, [r4, #40]
  76 0038 2046     		mov	r0, r4
  77 003a FFF7FEFF 		bl	HAL_UART_Receive_IT
  78              	.LVL5:
  79 003e 10BD     		pop	{r4, pc}
  80              	.LVL6:
  81              	.L7:
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 5


  82              		.align	2
  83              	.L6:
  84 0040 00380140 		.word	1073821696
  85 0044 00000000 		.word	UART1_RxBuff
  86              		.cfi_endproc
  87              	.LFE67:
  89              		.section	.text.MX_ALL_OF_UART_Init,"ax",%progbits
  90              		.align	2
  91              		.global	MX_ALL_OF_UART_Init
  92              		.thumb
  93              		.thumb_func
  95              	MX_ALL_OF_UART_Init:
  96              	.LFB66:
  96:Src/Control_usart.c ****     UART_HandleTypeDef** pUART_Array = UART_Array;
  97              		.loc 1 96 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101 0000 10B5     		push	{r4, lr}
 102              	.LCFI1:
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 4, -8
 105              		.cfi_offset 14, -4
 106              	.LVL7:
  97:Src/Control_usart.c **** 
 107              		.loc 1 97 0
 108 0002 044C     		ldr	r4, .L12
  99:Src/Control_usart.c ****     {
 109              		.loc 1 99 0
 110 0004 02E0     		b	.L9
 111              	.LVL8:
 112              	.L10:
 101:Src/Control_usart.c ****     }  
 113              		.loc 1 101 0 discriminator 2
 114 0006 FFF7FEFF 		bl	MX_SINGLE_OF_UART_Init
 115              	.LVL9:
  99:Src/Control_usart.c ****     {
 116              		.loc 1 99 0 discriminator 2
 117 000a 0434     		adds	r4, r4, #4
 118              	.LVL10:
 119              	.L9:
  99:Src/Control_usart.c ****     {
 120              		.loc 1 99 0 is_stmt 0 discriminator 1
 121 000c 2068     		ldr	r0, [r4]
 122 000e 0028     		cmp	r0, #0
 123 0010 F9D1     		bne	.L10
 103:Src/Control_usart.c **** 
 124              		.loc 1 103 0 is_stmt 1
 125 0012 10BD     		pop	{r4, pc}
 126              	.LVL11:
 127              	.L13:
 128              		.align	2
 129              	.L12:
 130 0014 00000000 		.word	.LANCHOR0
 131              		.cfi_endproc
 132              	.LFE66:
 134              		.section	.text.UARTReceive_IDLE,"ax",%progbits
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 6


 135              		.align	2
 136              		.global	UARTReceive_IDLE
 137              		.thumb
 138              		.thumb_func
 140              	UARTReceive_IDLE:
 141              	.LFB68:
 149:Src/Control_usart.c ****     }
 150:Src/Control_usart.c ****     
 151:Src/Control_usart.c **** }
 152:Src/Control_usart.c **** 
 153:Src/Control_usart.c **** void UARTReceive_IDLE(UART_HandleTypeDef *huart)
 154:Src/Control_usart.c **** {
 142              		.loc 1 154 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              	.LVL12:
 147 0000 10B5     		push	{r4, lr}
 148              	.LCFI2:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 4, -8
 151              		.cfi_offset 14, -4
 152 0002 82B0     		sub	sp, sp, #8
 153              	.LCFI3:
 154              		.cfi_def_cfa_offset 16
 155 0004 0446     		mov	r4, r0
 156              	.LBB2:
 155:Src/Control_usart.c ****     /*
 156:Src/Control_usart.c ****     uint16_t Rx_len = 0x00;
 157:Src/Control_usart.c ****     #if (USE_HAL_UART4 == 1U)
 158:Src/Control_usart.c ****         Rx_len = UART4_RxXferSize - huart->RxXferCount;
 159:Src/Control_usart.c ****     #elif (USE_HAL_UART5 == 1U)
 160:Src/Control_usart.c ****         Rx_len = UART5_RxXferSize - huart->RxXferCount;
 161:Src/Control_usart.c ****     #endif
 162:Src/Control_usart.c ****     */
 163:Src/Control_usart.c ****     __HAL_UART_CLEAR_IDLEFLAG(huart);
 157              		.loc 1 163 0
 158 0006 0023     		movs	r3, #0
 159 0008 0193     		str	r3, [sp, #4]
 160 000a 0368     		ldr	r3, [r0]
 161 000c 1A68     		ldr	r2, [r3]
 162 000e 0192     		str	r2, [sp, #4]
 163 0010 5B68     		ldr	r3, [r3, #4]
 164 0012 0193     		str	r3, [sp, #4]
 165 0014 019B     		ldr	r3, [sp, #4]
 166              	.LBE2:
 164:Src/Control_usart.c ****     HAL_UART_AbortReceive_IT(huart);
 167              		.loc 1 164 0
 168 0016 FFF7FEFF 		bl	HAL_UART_AbortReceive_IT
 169              	.LVL13:
 165:Src/Control_usart.c ****     HAL_UART_Receive_IT(huart, huart->pRxBuffPtr, huart->RxXferSize);
 170              		.loc 1 165 0
 171 001a A28D     		ldrh	r2, [r4, #44]
 172 001c A16A     		ldr	r1, [r4, #40]
 173 001e 2046     		mov	r0, r4
 174 0020 FFF7FEFF 		bl	HAL_UART_Receive_IT
 175              	.LVL14:
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 7


 166:Src/Control_usart.c **** }
 176              		.loc 1 166 0
 177 0024 02B0     		add	sp, sp, #8
 178              	.LCFI4:
 179              		.cfi_def_cfa_offset 8
 180              		@ sp needed
 181 0026 10BD     		pop	{r4, pc}
 182              		.cfi_endproc
 183              	.LFE68:
 185              		.section	.text.GetRxData,"ax",%progbits
 186              		.align	2
 187              		.global	GetRxData
 188              		.thumb
 189              		.thumb_func
 191              	GetRxData:
 192              	.LFB69:
 167:Src/Control_usart.c **** 
 168:Src/Control_usart.c **** void GetRxData(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
 169:Src/Control_usart.c **** {
 193              		.loc 1 169 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              	.LVL15:
 198 0000 10B5     		push	{r4, lr}
 199              	.LCFI5:
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 4, -8
 202              		.cfi_offset 14, -4
 170:Src/Control_usart.c ****     #if (USE_HAL_UART4 == 1U)
 171:Src/Control_usart.c ****         if(UART4 == huart->Instance)
 172:Src/Control_usart.c ****         {
 173:Src/Control_usart.c ****             memcpy(pData, UART4_RxBuff, Size);
 174:Src/Control_usart.c ****         }
 175:Src/Control_usart.c ****     #elif (USE_HAL_UART5 == 1U)
 176:Src/Control_usart.c ****         if(UART5 == huart->Instance)
 177:Src/Control_usart.c ****         {
 178:Src/Control_usart.c ****             memcpy(pData, UART5_RxBuff, Size);
 179:Src/Control_usart.c ****         }
 180:Src/Control_usart.c ****     #elif (USE_HAL_UART1 == 1U)
 181:Src/Control_usart.c ****         if(USART1 == huart->Instance)
 203              		.loc 1 181 0
 204 0002 0468     		ldr	r4, [r0]
 205 0004 034B     		ldr	r3, .L19
 206 0006 9C42     		cmp	r4, r3
 207 0008 03D1     		bne	.L16
 208 000a 0846     		mov	r0, r1
 209              	.LVL16:
 182:Src/Control_usart.c ****         {
 183:Src/Control_usart.c ****             memcpy(pData, UART1_RxBuff, Size);
 210              		.loc 1 183 0
 211 000c 0249     		ldr	r1, .L19+4
 212              	.LVL17:
 213 000e FFF7FEFF 		bl	memcpy
 214              	.LVL18:
 215              	.L16:
 216 0012 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 8


 217              	.L20:
 218              		.align	2
 219              	.L19:
 220 0014 00380140 		.word	1073821696
 221 0018 00000000 		.word	UART1_RxBuff
 222              		.cfi_endproc
 223              	.LFE69:
 225              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 226              		.align	2
 227              		.global	HAL_UART_RxCpltCallback
 228              		.thumb
 229              		.thumb_func
 231              	HAL_UART_RxCpltCallback:
 232              	.LFB70:
 184:Src/Control_usart.c ****         }
 185:Src/Control_usart.c ****     #elif (USE_HAL_UART2 == 1U)
 186:Src/Control_usart.c ****         if(UART2 == huart->Instance)
 187:Src/Control_usart.c ****         {
 188:Src/Control_usart.c ****             memcpy(pData, UART2_RxBuff, Size);
 189:Src/Control_usart.c ****         }
 190:Src/Control_usart.c ****     #elif (USE_HAL_UART3 == 1U)
 191:Src/Control_usart.c ****         if(UART3 == huart->Instance)
 192:Src/Control_usart.c ****         {
 193:Src/Control_usart.c ****             memcpy(pData, UART3_RxBuff, Size);
 194:Src/Control_usart.c ****         }
 195:Src/Control_usart.c ****     #endif
 196:Src/Control_usart.c **** }
 197:Src/Control_usart.c **** /* USER CODE END 1 */
 198:Src/Control_usart.c **** 
 199:Src/Control_usart.c **** 
 200:Src/Control_usart.c **** /* USER CODE BEGIN 2 */
 201:Src/Control_usart.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 202:Src/Control_usart.c **** {
 233              		.loc 1 202 0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237              		@ link register save eliminated.
 238              	.LVL19:
 239 0000 7047     		bx	lr
 240              		.cfi_endproc
 241              	.LFE70:
 243 0002 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 244              		.align	2
 245              		.global	HAL_UART_ErrorCallback
 246              		.thumb
 247              		.thumb_func
 249              	HAL_UART_ErrorCallback:
 250              	.LFB71:
 203:Src/Control_usart.c ****     #if (USE_HAL_UART4 == 1U)
 204:Src/Control_usart.c ****         if (huart == &huart4)
 205:Src/Control_usart.c ****         {
 206:Src/Control_usart.c ****         /* */
 207:Src/Control_usart.c ****         }
 208:Src/Control_usart.c ****     #endif
 209:Src/Control_usart.c **** 
 210:Src/Control_usart.c ****     #if (USE_HAL_UART5 == 1U)
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 9


 211:Src/Control_usart.c ****         if (huart == &huart5)
 212:Src/Control_usart.c ****         {
 213:Src/Control_usart.c ****         /* */
 214:Src/Control_usart.c ****         }
 215:Src/Control_usart.c ****     #endif
 216:Src/Control_usart.c **** 
 217:Src/Control_usart.c ****     #if (USE_HAL_UART1 == 1U)
 218:Src/Control_usart.c ****         if (huart == &huart1)
 219:Src/Control_usart.c ****         {
 220:Src/Control_usart.c ****         /* */
 221:Src/Control_usart.c ****         }
 222:Src/Control_usart.c ****     #endif
 223:Src/Control_usart.c **** 
 224:Src/Control_usart.c ****     #if (USE_HAL_UART2 == 1U)
 225:Src/Control_usart.c ****         if (huart == &huart2)
 226:Src/Control_usart.c ****         {
 227:Src/Control_usart.c ****         /* */
 228:Src/Control_usart.c ****         }
 229:Src/Control_usart.c ****     #endif
 230:Src/Control_usart.c **** 
 231:Src/Control_usart.c ****     #if (USE_HAL_UART3 == 1U)
 232:Src/Control_usart.c ****         if (huart == &huart3)
 233:Src/Control_usart.c ****         {
 234:Src/Control_usart.c ****         /* */
 235:Src/Control_usart.c ****         }
 236:Src/Control_usart.c ****     #endif
 237:Src/Control_usart.c **** }
 238:Src/Control_usart.c **** 
 239:Src/Control_usart.c **** void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
 240:Src/Control_usart.c **** {
 251              		.loc 1 240 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              	.LVL20:
 256              		.loc 1 240 0
 257 0000 38B5     		push	{r3, r4, r5, lr}
 258              	.LCFI6:
 259              		.cfi_def_cfa_offset 16
 260              		.cfi_offset 3, -16
 261              		.cfi_offset 4, -12
 262              		.cfi_offset 5, -8
 263              		.cfi_offset 14, -4
 241:Src/Control_usart.c ****     #if (USE_HAL_UART4 == 1U)
 242:Src/Control_usart.c ****         if (huart == &huart4)
 243:Src/Control_usart.c ****         {
 244:Src/Control_usart.c ****             memset(UART4_RxBuff, 0, 1000);
 245:Src/Control_usart.c ****             HAL_UART_Receive_IT(&huart4, UART4_RxBuff, 1000);
 246:Src/Control_usart.c ****         }
 247:Src/Control_usart.c ****     #endif
 248:Src/Control_usart.c **** 
 249:Src/Control_usart.c ****     #if (USE_HAL_UART5 == 1U)
 250:Src/Control_usart.c ****         if (huart == &huart5)
 251:Src/Control_usart.c ****         {
 252:Src/Control_usart.c ****             memset(UART5_RxBuff, 0, 1000);
 253:Src/Control_usart.c ****             HAL_UART_Receive_IT(&huart5, UART5_RxBuff, 1000);
 254:Src/Control_usart.c ****         }
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 10


 255:Src/Control_usart.c ****     #endif
 256:Src/Control_usart.c **** 
 257:Src/Control_usart.c ****     #if (USE_HAL_UART1 == 1U)
 258:Src/Control_usart.c ****         if (huart == &huart1)
 264              		.loc 1 258 0
 265 0002 084B     		ldr	r3, .L25
 266 0004 8342     		cmp	r3, r0
 267 0006 0CD1     		bne	.L22
 259:Src/Control_usart.c ****         {
 260:Src/Control_usart.c ****             memset(UART1_RxBuff, 0, 1000);
 268              		.loc 1 260 0
 269 0008 074C     		ldr	r4, .L25+4
 270 000a 4FF47A75 		mov	r5, #1000
 271 000e 2A46     		mov	r2, r5
 272 0010 0021     		movs	r1, #0
 273 0012 2046     		mov	r0, r4
 274              	.LVL21:
 275 0014 FFF7FEFF 		bl	memset
 276              	.LVL22:
 261:Src/Control_usart.c ****             HAL_UART_Receive_IT(&huart1, UART1_RxBuff, 1000);
 277              		.loc 1 261 0
 278 0018 2A46     		mov	r2, r5
 279 001a 2146     		mov	r1, r4
 280 001c 0148     		ldr	r0, .L25
 281 001e FFF7FEFF 		bl	HAL_UART_Receive_IT
 282              	.LVL23:
 283              	.L22:
 284 0022 38BD     		pop	{r3, r4, r5, pc}
 285              	.L26:
 286              		.align	2
 287              	.L25:
 288 0024 00000000 		.word	.LANCHOR1
 289 0028 00000000 		.word	UART1_RxBuff
 290              		.cfi_endproc
 291              	.LFE71:
 293              		.section	.text.__io_putchar,"ax",%progbits
 294              		.align	2
 295              		.global	__io_putchar
 296              		.thumb
 297              		.thumb_func
 299              	__io_putchar:
 300              	.LFB72:
 262:Src/Control_usart.c ****         }
 263:Src/Control_usart.c ****     #endif
 264:Src/Control_usart.c **** 
 265:Src/Control_usart.c ****     #if (USE_HAL_UART2 == 1U)
 266:Src/Control_usart.c ****         if (huart == &huart2)
 267:Src/Control_usart.c ****         {
 268:Src/Control_usart.c ****             memset(UART2_RxBuff, 0, 1000);
 269:Src/Control_usart.c ****             HAL_UART_Receive_IT(&huart2, UART2_RxBuff, 1000);
 270:Src/Control_usart.c ****         }
 271:Src/Control_usart.c ****     #endif
 272:Src/Control_usart.c **** 
 273:Src/Control_usart.c ****     #if (USE_HAL_UART3 == 1U)
 274:Src/Control_usart.c ****         if (huart == &huart3)
 275:Src/Control_usart.c ****         {
 276:Src/Control_usart.c ****             memset(UART3_RxBuff, 0, 1000);
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 11


 277:Src/Control_usart.c ****             HAL_UART_Receive_IT(&huart3, UART3_RxBuff, 1000);
 278:Src/Control_usart.c ****         }
 279:Src/Control_usart.c ****     #endif
 280:Src/Control_usart.c **** }
 281:Src/Control_usart.c **** /* USER CODE END 2 */
 282:Src/Control_usart.c ****  
 283:Src/Control_usart.c **** 
 284:Src/Control_usart.c **** /* USER CODE BEGIN 3 */
 285:Src/Control_usart.c **** PUTCHAR_PROTOTYPE
 286:Src/Control_usart.c **** {
 301              		.loc 1 286 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 8
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              	.LVL24:
 306 0000 00B5     		push	{lr}
 307              	.LCFI7:
 308              		.cfi_def_cfa_offset 4
 309              		.cfi_offset 14, -4
 310 0002 83B0     		sub	sp, sp, #12
 311              	.LCFI8:
 312              		.cfi_def_cfa_offset 16
 313 0004 02A9     		add	r1, sp, #8
 314 0006 41F8040D 		str	r0, [r1, #-4]!
 287:Src/Control_usart.c ****   HAL_UART_Transmit(P_printf, (uint8_t *)&ch, 1, 10);
 315              		.loc 1 287 0
 316 000a 0A23     		movs	r3, #10
 317 000c 0122     		movs	r2, #1
 318 000e 0448     		ldr	r0, .L29
 319              	.LVL25:
 320 0010 0068     		ldr	r0, [r0]
 321 0012 FFF7FEFF 		bl	HAL_UART_Transmit
 322              	.LVL26:
 288:Src/Control_usart.c **** 
 289:Src/Control_usart.c ****   return ch;
 290:Src/Control_usart.c **** }
 323              		.loc 1 290 0
 324 0016 0198     		ldr	r0, [sp, #4]
 325 0018 03B0     		add	sp, sp, #12
 326              	.LCFI9:
 327              		.cfi_def_cfa_offset 4
 328              		@ sp needed
 329 001a 5DF804FB 		ldr	pc, [sp], #4
 330              	.LVL27:
 331              	.L30:
 332 001e 00BF     		.align	2
 333              	.L29:
 334 0020 00000000 		.word	.LANCHOR2
 335              		.cfi_endproc
 336              	.LFE72:
 338              		.section	.text._write,"ax",%progbits
 339              		.align	2
 340              		.global	_write
 341              		.thumb
 342              		.thumb_func
 344              	_write:
 345              	.LFB73:
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 12


 291:Src/Control_usart.c **** 
 292:Src/Control_usart.c **** int _write(int file, char *ptr, int len)
 293:Src/Control_usart.c **** {
 346              		.loc 1 293 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              	.LVL28:
 351 0000 70B5     		push	{r4, r5, r6, lr}
 352              	.LCFI10:
 353              		.cfi_def_cfa_offset 16
 354              		.cfi_offset 4, -16
 355              		.cfi_offset 5, -12
 356              		.cfi_offset 6, -8
 357              		.cfi_offset 14, -4
 358 0002 1646     		mov	r6, r2
 359              	.LVL29:
 294:Src/Control_usart.c ****     int DataIdx;
 295:Src/Control_usart.c **** 
 296:Src/Control_usart.c ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 360              		.loc 1 296 0
 361 0004 0024     		movs	r4, #0
 362 0006 05E0     		b	.L32
 363              	.LVL30:
 364              	.L33:
 297:Src/Control_usart.c ****     {
 298:Src/Control_usart.c ****         #ifdef __GNUC__
 299:Src/Control_usart.c ****             __io_putchar(*ptr++);
 365              		.loc 1 299 0 discriminator 3
 366 0008 4D1C     		adds	r5, r1, #1
 367              	.LVL31:
 368 000a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 369 000c FFF7FEFF 		bl	__io_putchar
 370              	.LVL32:
 296:Src/Control_usart.c ****     {
 371              		.loc 1 296 0 discriminator 3
 372 0010 0134     		adds	r4, r4, #1
 373              	.LVL33:
 374              		.loc 1 299 0 discriminator 3
 375 0012 2946     		mov	r1, r5
 376              	.LVL34:
 377              	.L32:
 296:Src/Control_usart.c ****     {
 378              		.loc 1 296 0 discriminator 1
 379 0014 B442     		cmp	r4, r6
 380 0016 F7DB     		blt	.L33
 300:Src/Control_usart.c ****         #else
 301:Src/Control_usart.c ****             fputc(*ptr++);
 302:Src/Control_usart.c ****         #endif   
 303:Src/Control_usart.c ****     }
 304:Src/Control_usart.c ****     
 305:Src/Control_usart.c ****     return len;
 306:Src/Control_usart.c **** }
 381              		.loc 1 306 0
 382 0018 3046     		mov	r0, r6
 383 001a 70BD     		pop	{r4, r5, r6, pc}
 384              		.cfi_endproc
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 13


 385              	.LFE73:
 387              		.comm	UART1_RxBuff,1000,4
 388              		.global	P_printf
 389              		.global	huart1
 390              		.section	.data.huart1,"aw",%progbits
 391              		.align	2
 392              		.set	.LANCHOR1,. + 0
 395              	huart1:
 396 0000 00380140 		.word	1073821696
 397 0004 00C20100 		.word	115200
 398 0008 00000000 		.word	0
 399 000c 00000000 		.word	0
 400 0010 00000000 		.word	0
 401 0014 0C000000 		.word	12
 402 0018 00000000 		.space	8
 402      00000000 
 403 0020 00000000 		.space	32
 403      00000000 
 403      00000000 
 403      00000000 
 403      00000000 
 404              		.section	.data.P_printf,"aw",%progbits
 405              		.align	2
 406              		.set	.LANCHOR2,. + 0
 409              	P_printf:
 410 0000 00000000 		.word	huart1
 411              		.section	.data.UART_Array,"aw",%progbits
 412              		.align	2
 413              		.set	.LANCHOR0,. + 0
 416              	UART_Array:
 417 0000 00000000 		.word	huart1
 418 0004 00000000 		.word	0
 419              		.text
 420              	.Letext0:
 421              		.file 2 "/Users/leixiaoxiang/opt/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 422              		.file 3 "/Users/leixiaoxiang/opt/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 423              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 424              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 425              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 426              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 427              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
 428              		.file 9 "Inc/Control_usart.h"
 429              		.file 10 "Inc/main.h"
ARM GAS  /var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Control_usart.c
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:20     .text.MX_SINGLE_OF_UART_Init:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:25     .text.MX_SINGLE_OF_UART_Init:0000000000000000 MX_SINGLE_OF_UART_Init
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:84     .text.MX_SINGLE_OF_UART_Init:0000000000000040 $d
                            *COM*:00000000000003e8 UART1_RxBuff
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:90     .text.MX_ALL_OF_UART_Init:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:95     .text.MX_ALL_OF_UART_Init:0000000000000000 MX_ALL_OF_UART_Init
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:130    .text.MX_ALL_OF_UART_Init:0000000000000014 $d
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:135    .text.UARTReceive_IDLE:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:140    .text.UARTReceive_IDLE:0000000000000000 UARTReceive_IDLE
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:186    .text.GetRxData:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:191    .text.GetRxData:0000000000000000 GetRxData
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:220    .text.GetRxData:0000000000000014 $d
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:226    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:231    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:244    .text.HAL_UART_ErrorCallback:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:249    .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:288    .text.HAL_UART_ErrorCallback:0000000000000024 $d
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:294    .text.__io_putchar:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:299    .text.__io_putchar:0000000000000000 __io_putchar
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:334    .text.__io_putchar:0000000000000020 $d
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:339    .text._write:0000000000000000 $t
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:344    .text._write:0000000000000000 _write
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:409    .data.P_printf:0000000000000000 P_printf
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:395    .data.huart1:0000000000000000 huart1
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:391    .data.huart1:0000000000000000 $d
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:405    .data.P_printf:0000000000000000 $d
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:412    .data.UART_Array:0000000000000000 $d
/var/folders/9t/hshg14bj4r3bdmp8s0pp3jdw0000gn/T//ccRy2XBc.s:416    .data.UART_Array:0000000000000000 UART_Array
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_UART_Receive_IT
HAL_UART_AbortReceive_IT
memcpy
memset
HAL_UART_Transmit
